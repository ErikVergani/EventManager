/**
 * Filename:    ApiService.java
 *
 * Description: Implementation of the ApiService class.
 *
 * Revision:    20 de abr. de 2024
 *
 * Author:      Erik Freire Vergani
 * EMail:       efvergani@hotmail.com.br
 *
 */

package com.univates.api.services;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestTemplate;

import com.univates.api.exception.ApiConnectionException;
import com.univates.api.exception.ApiResponseException;
import com.univates.api.records.request.EventRecord;
import com.univates.api.records.response.EventResponseRecord;
import com.univates.api.security.ApiConfig;

/**
 * @author ev
 */
@Service
public class ApiService
{
    @Autowired
    private RestTemplate restTemplate;
    
    public EventResponseRecord returnEvent( EventRecord event, String url, HttpMethod method )
    {
        try
        {
            HttpHeaders headers = new HttpHeaders();
            headers.setContentType( MediaType.APPLICATION_JSON );
            headers.set( "login", ApiConfig.API_USER );
            headers.set( "pass", ApiConfig.API_PASS+1 );
            
            HttpEntity<EventRecord> requestEntity = new HttpEntity<>( event, headers );
            
            // Fazer a requisição POST para a API final
            ResponseEntity<EventResponseRecord> responseEntity = restTemplate.exchange(
                                                                            url,
                                                                            method,
                                                                            requestEntity,
                                                                            EventResponseRecord.class
                                                                          );
            
            if ( responseEntity.getStatusCode().is2xxSuccessful() ) 
            {
                return responseEntity.getBody();
            } 
            
            else 
            {
                throw new ApiConnectionException( HttpStatus.BAD_REQUEST, "Falha na conexão" );
            }
        }
        
        catch ( HttpClientErrorException e )
        {
            throw new ApiResponseException( null, null );
        }
    }
    
    public List<EventResponseRecord> getEvents( String url, HttpMethod method )
    {
        try
        {
            HttpHeaders headers = new HttpHeaders();
            headers.setContentType( MediaType.APPLICATION_JSON );
            headers.set( "login", ApiConfig.API_USER );
            headers.set( "pass", ApiConfig.API_PASS+"1" );
            
            HttpEntity<EventRecord> requestEntity = new HttpEntity<>( headers );
            
            // Fazer a requisição POST para a API final
            ResponseEntity<EventResponseRecord[]> responseEntity = restTemplate.exchange(
                                                                            url,
                                                                            method,
                                                                            requestEntity,
                                                                            EventResponseRecord[].class
                                                                          );
            
            if ( responseEntity.getStatusCode().is2xxSuccessful() ) 
            {
                return Arrays.asList( responseEntity.getBody() );
            } 
            
            else 
            {
                throw new ApiConnectionException( "Cannot access the API" );
            }
        }
        
        catch ( HttpClientErrorException e )
        {
            throw new com.univates.api.exception.ApiResponseException( null, null);
        }
    }
}
