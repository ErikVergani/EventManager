/**
 * Filename:    NotFoundExceptionHandler.java
 *
 * Description: Implementation of the NotFoundExceptionHandler class.
 *
 * Revision:    21 de abr. de 2024
 *
 * Author:      Erik Freire Vergani
 * EMail:       efvergani@hotmail.com.br
 *
 */

package com.univates.api.handlers;

import java.io.IOException;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.http.client.ClientHttpResponse;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.ResponseErrorHandler;

import com.univates.api.exception.ApiResponseException;
import com.univates.api.exception.NotFoundException;
import com.univates.api.records.response.ErrorRecord;

/**
 * @author ev
 */
@ControllerAdvice
public class ApiResponseExceptionHandler implements ResponseErrorHandler
{

    /**
     * hasError
     *
     */
    @Override
    public boolean hasError( ClientHttpResponse response ) throws IOException
    {
        return response.getStatusCode().is5xxServerError() || 
                response.getStatusCode().is4xxClientError();
    }

    /**
     * handleError
     *
     */
    @Override
    public void handleError( ClientHttpResponse response ) throws IOException
    {
        if (response.getStatusCode().is5xxServerError()) {
            //Handle SERVER_ERROR
            throw new HttpClientErrorException(response.getStatusCode());
        } else if (response.getStatusCode().is4xxClientError()) {
            //Handle CLIENT_ERROR
            if (response.getStatusCode() == HttpStatus.NOT_FOUND) {
                throw new NotFoundException( response.getStatusText() );
            }
        } 
    }
    
}
